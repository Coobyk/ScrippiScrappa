name: CI
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
        steps:
            - uses: actions/checkout@v3

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable

            - name: Build release binary
              run: |
                  cargo build --release --target ${{ matrix.target }}

            - name: Test website scraping via binary
              run: |
                  echo "Testing website scraping via compiled binary"
                  chmod +x target/${{ matrix.target }}/release/scrippiscrappa
                  ./target/${{ matrix.target }}/release/scrippiscrappa https://coobyk.pp.ua || (echo 'Binary scrape failed' && exit 1)

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: scrippiscrappa-${{ matrix.target }}
                  path: |
                      target/${{ matrix.target }}/release/scrippiscrappa
                      target/${{ matrix.target }}/release/scrippiscrappa.exe

            # Create GitHub release and attach built binaries
            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                tag_name: v${{ github.run_number }}-{{ matrix.target }}
                name: Release ${{ github.run_number }} ({{ matrix.target }})
                files: |
                  target/${{ matrix.target }}/release/scrippiscrappa*
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
